# File: .github/workflows/workflow.yml
# Okteto documentation: https://www.okteto.com/docs/cloud/github-actions/
# 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: cicd_pipeline

env:
  COMANDENV: $(cat scripts/temp.txt | grep "BugInstance size is")

jobs:

  build_and_deploy_backend:
    name: Build Backend APP and publish to Docker Registry
    runs-on: ubuntu-latest

    steps:

      # [STEP 1] - Checkout Code
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64' 
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt' 
          java-version: '11'
          
      - id: checkout  
        name: Checkout code from repo
        uses: actions/checkout@v3
      
      # - id: install_python_requirements
      #   name: Install python requirements
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     pip3 install -r requirements.txt
          
# pip install --verbose --requirement requirements.txt
          
      
      - id: mvn_spotbugs
        name: mvn spotbugs (bash content)
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          cd spring-boot-hello-world2 
          mvn spotbugs:check -Ddetail=true 2>/dev/null 1> nicoculpable.txt
          
          ls -la .
          
          cat nicoculpable.txt
          
          python3 scripts/nicoculpa.py
          
          
      
  #     # [STEP 2] - Build & Store Docker image
  #     - name: Login to Docker Hub
  #       run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        
  #     - name: Build Frontend Container image
  #       run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.FRONT_REPO }}:latest ./frontend-client
        
  #     - name: Publish Docker image
  #       run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.FRONT_REPO }}:latest


  #     - uses: actions-hub/kubectl@master
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  #       with:
  #         args: apply -f k8s/okteto_k8s_github_actions/yamls/deployment.yaml
  
  # build_back:
  #   name: Build Backend and publish to Docker Registry
  #   runs-on: ubuntu-latest

  #   steps:

  #     # [STEP 1] - Checkout Code
  #     - name: Checkout code from repo
  #       uses: actions/checkout@v2
      
  #     # [STEP 2] - Set UP JDK 11 
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'
  #         distribution: 'temurin'
  #         cache: maven
      
  #     # [STEP 3] - Build JAR with MVN 
  #     - name: Build package with Maven
  #       run: mvn -B clean package -DskipTests --file backend-api/pom.xml
        
  #     # [STEP 4] - Build & Store Docker image
  #     - name: Login to Docker Hub
  #       run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        
  #     - name: Build Backend Container image
  #       run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BACK_REPO }}:latest ./backend-api
        
  #     - name: Publish Docker image
  #       run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BACK_REPO }}:latest


   
  # deploy_front_to_k8s:
  #   needs: [build_front]
  #   name: Deploy frontend to k8s
  #   runs-on: ubuntu-latest

  #   steps:

  #     # [STEP 1] - Checkout Code
  #     - name: Checkout code from repo
  #       uses: actions/checkout@v2

  #     # [STEP 2] - Deploy Pods
  #     - name: Deploy Pods (containers)
  #       uses: actions-hub/kubectl@master
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  #       with:
  #         args: apply -f k8s/okteto_k8s/yamls/front/01-deployment.yaml 

  #     # [STEP 3] - Deploy Service (Load Balancer)
  #     - name: Deploy services (LB)
  #       uses: actions-hub/kubectl@master
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  #       with:
  #         args: apply -f k8s/okteto_k8s/yamls/front/02-service.yaml


  # deploy_back_to_k8s:
  #   # needs: [build_back]
  #   name: Deploy backend to k8s
  #   runs-on: ubuntu-latest

  #   steps:

  #     # [STEP 1] - Checkout Code
  #     - name: Checkout code from repo
  #       uses: actions/checkout@v2

  #     # [STEP 2] - Deploy Pods
  #     - name: Deploy Pods (containers)
  #       uses: actions-hub/kubectl@master
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  #       with:
  #         args: apply -f k8s/okteto_k8s/yamls/back/01-deployment.yaml 

  #     # [STEP 3] - Deploy Service (Load Balancer)
  #     - name: Deploy services (LB)
  #       uses: actions-hub/kubectl@master
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
  #       with:
  #         args: apply -f k8s/okteto_k8s/yamls/back/02-service.yaml